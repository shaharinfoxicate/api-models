swagger: '2.0'
schemes:
  - https
host: api.simplyrets.com
basePath: /
info:
  description: "The SimplyRETS API is an exciting step towards making it easier for\ndevelopers and real estate agents to build something awesome with\nreal estate data!\n\nThe documentation below makes live requests to our API using the\ntrial data. To get set up with the API using live MLS data, you\nmust have RETS credentials from your MLS, which you can then use to\ncreate an app with SimplyRETS. For more information on that\nprocess, please see our [FAQ](https://simplyrets.com/faq), [Getting\nStarted](https://simplyrets.com/blog/getting-set-up.html) page, or\n[contact us](https://simplyrets.com/\\#home-contact).\n\nBelow you'll find the API endpoints, query parameters, response bodies,\nand other information about using the SimplyRETS API. You can run\nqueries by clicking the 'Try it Out' button at the bottom of each\nsection.\n\n### Authentication\nThe SimplyRETS API uses Basic Authentication. When you create an\napp, you'll get a set of API credentials to access your\nlistings. If you're trying out the test data, you can use\n`simplyrets:simplyrets` for connecting to the API.\n\n### Media Types\nThe SimplyRETS API uses the 'Accept' header to allow clients to\ncontrol media types (content versions). We maintain backwards\ncompatibility with API clients by allowing them to specify a\ncontent version. We highly recommend setting and explicity media\ntype when your application reaches production. Both the structure\nand content of our API response bodies is subject to change so we\ncan add new features while respecting the stability of applications\nwhich have already been developed.\n\nTo always use the latest SimplyRETS content version, simply use\n`application/json` in your application `Accept` header.\n\nIf you want to pin your clients media type to a specific version,\nyou can use the vendor-specific SimplyRETS media type, e.g.\n`application/vnd.simplyrets-v0.1+json\"`\n\nTo view all valid content-types for making an `OPTIONS`, make a\nrequest to the SimplyRETS api root\n\n`curl -XOPTIONS -u simplyrets:simplyrets https://api.simplyrets.com/`\n\nThe default media types used in our API responses may change in the\nfuture. If you're building an application and care about the\nstability of the API, be sure to request a specific media type in the\nAccept header as shown in the examples below.\n\nThe wordpress plugin automatically sets the `Accept` header for the\ncompatible SimplyRETS media types.\n\n### Pagination\nThere a few pieces of useful information about each request stored\nin the HTTP Headers:\n\n- `X-Total-Count` shows you the total amount of listings that match\n  your current query.\n- `Link` contains pre-built pagination links for accessing the next\n'page' of listings that match your query. Read more about that\n[here](https://simplyrets.com/blog/api-pagination.html).\n"
  title: SimplyRETS
  version: 1.0.0
  x-origin:
    format: swagger
    url: 'https://docs.simplyrets.com/api/resources.json'
    version: '2.0'
  x-providerName: simplyrets.com
consumes:
  - application/json
produces:
  - application/json
  - application/vnd.simplyrets-v0.1+json
securityDefinitions:
  basicAuth:
    description: HTTP Basic Authentication. Works over `HTTPS` only
    type: basic
paths:
  /openhouses:
    get:
      description: |
        This is the main endpoint for accessing openhouses.
      parameters:
        - description: |
            Request listings by a specific property type. This
            defaults to Residential, and you can only specify one type
            in a single query.
          enum:
            - Residential
            - Rental
            - Multifamily
            - Condominium
            - Commercial
            - Land
          in: query
          name: type
          required: false
          type: string
        - collectionFormat: multi
          description: |
            Filter the listings returned by brokerage with a Broker ID.
            You can specific multiple broker parameters. Note, the Broker
            ID is provided by your MLS.
          in: query
          items:
            type: string
          name: brokers
          required: false
          type: array
        - description: |
            Filter the listings returned by an agent ID.  Note, the
            Agent ID is provided by your MLS.
          in: query
          name: agent
          required: false
          type: string
        - description: |
            Filter listings by a minimum price.
          in: query
          name: minprice
          required: false
          type: integer
        - description: Scheduled date and time of the open house showing
          format: date-time
          in: query
          name: startdate
          type: string
        - description: |
            Used as a cursor for pagination. Increase the offset parameter
            by the limit to go to the next "page" of listings. Also take
            a look at the Link HTTP Header for pre-built pagination.
          in: query
          name: offset
          required: false
          type: integer
        - description: |
            Set the number of listings to return in the response.
            This defaults to 20 listings, and can be a maximum of 50.
            To paginate through to the next page of listings, take a
            look at the `offset` parameter, or the Link in the HTTP
            Header.
          in: query
          name: limit
          required: false
          type: integer
        - description: |
            Sort the response by a specific field. Values starting
            with a minus (-) denote descending order, while the others
            are ascending.
          enum:
            - listprice
            - '-listprice'
            - listdate
            - '-listdate'
            - beds
            - '-beds'
            - baths
            - '-baths'
          in: query
          name: sort
          required: false
          type: string
      responses:
        '200':
          description: |
            Will send `Authenticated` if authentication is succesful,
            otherwise it will send `Unauthorized`.
          schema:
            items:
              $ref: '#/definitions/OpenHouse'
            type: array
        '400':
          description: Will send `Bad Request`.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Will send `Authentication Required`.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Will send `Authorization Required`.
          schema:
            $ref: '#/definitions/Error'
        '426':
          description: |
            Will send `Too Many Requests`. Please see our Service
            Level Agreement for more information on Request Rates and
            Acceptable Use.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Will send `Internal Server Error`.
          schema:
            $ref: '#/definitions/Error'
      security:
        - basicAuth: []
      summary: The SimplyRETS OpenHouses API
  '/openhouses/{openHouseKey}':
    get:
      description: |
        Use this endpoint for accessing a single OpenHouse.
      parameters:
        - default: 24625637
          description: A unique OpenHouse identification key
          in: path
          name: openHouseKey
          required: true
          type: integer
      responses:
        '200':
          description: |
            Will send `Authenticated` if authentication is succesful,
            otherwise it will send `Unauthorized`
          schema:
            $ref: '#/definitions/OpenHouse'
        '400':
          description: Will send `Bad Request`.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Will send `Authentication Required`.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Will send `Authorization Required`.
          schema:
            $ref: '#/definitions/Error'
        '426':
          description: |
            Will send `Too Many Requests`. Please see our Service
            Level Agreement for more information on Request Rates and
            Acceptable Use.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Will send `Internal Server Error`.
          schema:
            $ref: '#/definitions/Error'
      security:
        - basicAuth: []
      summary: Single OpenHouse Endpoint
  /properties:
    get:
      description: |
        This is the main endpoint for accessing your properties. View
        all of the available query parameters and make requests below!
        The API uses Basic Authentication, which most HTTP libraries
        will handle for you. To use the test data (which is what this
        pages uses), you can use the api key `simplyrets` and secret
        `simplyrets`. Note that these test listings are not live MLS
        listings but the data, query parameters, and response bodies
        will all work the same.
      parameters:
        - description: |
            A textual keyword search. This parameter will search  the following
            fields, when available:
              - mls number / listing id
              - street number
              - street name
              - mls area (major)
              - city
              - subdivision name
              - postal code
          in: query
          name: q
          required: false
          type: string
        - description: |
            Filter listings by a minimum price.
          in: query
          name: minprice
          required: false
          type: integer
        - description: |
            Filter listings by a maximum price
          in: query
          name: maxprice
          required: false
          type: integer
        - description: |
            Filter the listings returned by an agent ID.  Note, the
            Agent ID is provided by your MLS.
          in: query
          name: agent
          required: false
          type: string
        - description: |
            Filter listings by a minimum area size in Sq Ft.
          in: query
          name: minarea
          required: false
          type: integer
        - description: |
            Filter listings by a maximum area size in Sq Ft.
          in: query
          name: maxarea
          required: false
          type: integer
        - description: |
            Filter listings by a minimum number of bathrooms.
          in: query
          name: minbaths
          required: false
          type: integer
        - description: |
            Filter listings by a maximum number of bathrooms.
          in: query
          name: maxbaths
          required: false
          type: integer
        - description: |
            Filter listings by a minimum number of bedrooms.
          in: query
          name: minbeds
          required: false
          type: integer
        - description: |
            Filter listings by a maximum number of bedrooms.
          in: query
          name: maxbeds
          required: false
          type: integer
        - description: |
            Filter listings by a maximum number of days on market.
            _Note that your MLS must provide Days on Market data._
          in: query
          name: maxdom
          required: false
          type: integer
        - description: |
            Filter listings by a setting a minimum year built.
          in: query
          name: minyear
          required: false
          type: integer
        - description: |
            Set the number of listings to return in the response.
            This defaults to 20 listings, and can be a maximum of 50.
            To paginate through to the next page of listings, take a
            look at the `offset` parameter, or the Link in the HTTP
            Header.
          in: query
          name: limit
          required: false
          type: integer
        - description: |
            Used as a cursor for pagination. Increase the offset parameter
            by the limit to go to the next "page" of listings. Also take
            a look at the Link HTTP Header for pre-built pagination.
          in: query
          name: offset
          required: false
          type: integer
        - description: |
            Used to specify the vendor (MLS) to search from. This
            parameter is required on multi-MLS apps, and you can only
            query one vendor at a time. To get your vendor id's make
            an OPTIONS request to https://api.simplyrets.com.
          in: query
          name: vendor
          required: false
          type: string
        - collectionFormat: multi
          description: |
            Filter the listings returned by brokerage with a Broker ID.
            You can specific multiple broker parameters. Note, the Broker
            ID is provided by your MLS.
          in: query
          items:
            type: string
          name: brokers
          required: false
          type: array
        - collectionFormat: multi
          description: |
            Filter the listings returned by postal codes / zip
            code. You can specify multiple.
          in: query
          items:
            type: string
          name: postalCodes
          required: false
          type: array
        - collectionFormat: multi
          description: |
            Filter the listings returned by specific features.  You
            can specify multiple.
          in: query
          items:
            type: string
          name: features
          required: false
          type: array
        - collectionFormat: multi
          description: |
            Filter the listings returned by specific amenities.  You
            can specify multiple amenities.
          in: query
          items:
            type: string
          name: amenities
          required: false
          type: array
        - collectionFormat: multi
          description: |
            Filter the listings returned by specific neighborhoods and
            subdivisions. You can specify multiple.
          in: query
          items:
            type: string
          name: neighborhoods
          required: false
          type: array
        - collectionFormat: multi
          description: |
            Filter the listings returned by specific cities. You can
            specify multiple.
          in: query
          items:
            type: string
          name: cities
          required: false
          type: array
        - collectionFormat: multi
          description: |
            Filter the listings returned by specific counties. You can
            specify multiple.
          in: query
          items:
            type: string
          name: counties
          required: false
          type: array
        - collectionFormat: multi
          description: |
            Return listings that are within a set of latitude
            longitude coordinates. For example;
            ```
            29.723837,-95.69778
            29.938275,-95.69778
            29.938275,-95.32974
            29.723837,-95.32974
            ```
            Note that some MLS's do not provide latitude and longitude
            for their listings, which is required for this parameter
            to work. In these cases, SimplyRETS offers a [Geocoding
            Addon](https://simplyrets.com/services#geocoding).
          in: query
          items:
            type: string
          name: points
          required: false
          type: array
        - collectionFormat: multi
          description: |
            Include a extra fields which are not in the default
            response body
            - 'association' includes additional HOA data
            - 'agreement' information on the listing agreement
            - 'garageSpaces' additional garage data
            - 'maintenanceExpense' data on maintenance expenses
            - 'parking' additional parking data
            - 'pool' includes an additional pool description
            - 'rooms' include parameter will include
               any additional rooms as a list.

            Note that your MLS must provide these fields in their RETS
            data for them to be available in the API response.
          enum:
            - association
            - agreement
            - garageSpaces
            - maintenanceExpense
            - parking
            - pool
            - rooms
          in: query
          items:
            type: string
          name: include
          required: false
          type: array
        - description: |

            Request listings by a specific status. This parameter
            defaults to active and you can specify multiple statuses
            in a single query.

            Listing statuses depend on your MLS's availability. Below is
            a brief description of each status with possible synonyms which
            may map to your MLS-specific statuses
            - Active: Active Listing which is still on the market
            - ActiveUnderContract: An offer has been accepted but the listing is still on market. Synonyms: Accepting Backup Offers, Backup Offer, Active With Accepted. Synonyms: Offer, Backup, Contingent
            - Pending: An offer has been accepted and the listing is no longer on market. Synonyms: Offer Accepted, Under Contract
            - Hold: The listing has been withdrawn from the market, but a contract
              still exists between the seller and the listing member. Synonyms: Hold, Hold Do Not Show, Temp Off Market
            - Withdrawn: The listing has been withdrawn from the market, but a contract
              still exists between the seller and the listing member. Synonyms: Hold, Hold Do Not Show, Temp Off Market
            - Closed: The purchase agreement has been fulfilled or the lease
              agreement has been executed. Synonyms: Sold, Leased, Rented, Closed Sale
            - Expired: The listing contract has expired
            - Delete: The listing contract was never valid or other reason for the contract to be nullified. Synonyms: Kill, Zap
            - Incomplete: The listing has not yet be completely entered and is not yet
              published in the MLS. Synonyms: Draft, Partially Complted
            - ComingSoon
          enum:
            - Active
            - Pending
            - Closed
            - ActiveUnderContract
            - Hold
            - Withdrawn
            - Expired
            - Delete
            - Incomplete
            - ComingSoon
          in: query
          name: status
          required: false
          type: string
        - description: |
            Request listings by a specific property type. This
            defaults to Residential, and you can only specify one type
            in a single query.
          enum:
            - Residential
            - Rental
            - Multifamily
            - Condominium
            - Commercial
            - Land
          in: query
          name: type
          required: false
          type: string
        - description: |
            Sort the response by a specific field. Values starting
            with a minus (-) denote descending order, while the others
            are ascending.
          enum:
            - listprice
            - '-listprice'
            - listdate
            - '-listdate'
            - beds
            - '-beds'
            - baths
            - '-baths'
          in: query
          name: sort
          required: false
          type: string
      responses:
        '200':
          description: |
            Will send `Authenticated` if authentication is succesful,
            otherwise it will send `Unauthorized`.
          schema:
            items:
              $ref: '#/definitions/Listing'
            type: array
        '400':
          description: Will send `Bad Request`.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Will send `Authentication Required`.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Will send `Authorization Required`.
          schema:
            $ref: '#/definitions/Error'
        '426':
          description: |
            Will send `Too Many Requests`. Please see our Service
            Level Agreement for more information on Request Rates and
            Acceptable Use.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Will send `Internal Server Error`.
          schema:
            $ref: '#/definitions/Error'
      security:
        - basicAuth: []
      summary: The SimplyRETS Listings API
  '/properties/{mlsId}':
    get:
      description: |
        Use this endpoint for accessing a single listing. When you
        make a search to the `/properties` endpoint, each listing in
        the response will contain a unique `mlsId` field which should
        be used to request that listing on this route.
      parameters:
        - default: 1005252
          description: A mlsId (unique indentifier).
          in: path
          name: mlsId
          required: true
          type: integer
        - collectionFormat: multi
          description: |
            Include a extra fields which are not in the default
            response body
            - 'association' includes additional HOA data
            - 'agreement' information on the listing agreement
            - 'garageSpaces' additional garage data
            - 'maintenanceExpense' data on maintenance expenses
            - 'parking' additional parking data
            - 'pool' includes an additional pool description
            - 'rooms' include parameter will include
               any additional rooms as a list.

            Note that your MLS must provide these fields in their RETS
            data for them to be available with valid data in the API
            response. If your MLS does not offer these fields, they will
            contain 'null'.
          enum:
            - association
            - agreement
            - garageSpaces
            - maintenanceExpense
            - parking
            - pool
            - rooms
          in: query
          items:
            type: string
          name: include
          required: false
          type: array
      responses:
        '200':
          description: |
            Will send `Authenticated` if authentication is succesful,
            otherwise it will send `Unauthorized`
          schema:
            $ref: '#/definitions/Listing'
        '400':
          description: Will send `Bad Request`.
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Will send `Authentication Required`.
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Will send `Authorization Required`.
          schema:
            $ref: '#/definitions/Error'
        '426':
          description: |
            Will send `Too Many Requests`. Please see our Service
            Level Agreement for more information on Request Rates and
            Acceptable Use.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Will send `Internal Server Error`.
          schema:
            $ref: '#/definitions/Error'
      security:
        - basicAuth: []
      summary: Single Listing Endpoint
definitions:
  Agent:
    description: SimplyRETS Agent Api
    properties:
      contact:
        $ref: '#/definitions/ContactInformation'
        description: |
          Agent contact info. This information is only present when
          your RETS feed specifies the agent wishes to show their
          contact information publicly.
      firstName:
        description: Agent first name
        type: string
      id:
        description: Well known Agent MLS number or id.
        type: string
      lastName:
        description: Agent last name
        type: string
    type: object
  Broker:
    description: SimplyRETS Broker Api
    properties:
      startdate:
        description: Start Date
        format: date-time
        type: string
    type: object
  ContactInformation:
    description: RETS MLS Contact Information
    properties:
      cell:
        description: Contact Information Cell Phone
        type: string
      full:
        description: Full pretty-printed address with suffix (if available)
        type: string
      office:
        description: Contact Information Office Phone Number
        format: byte
        type: string
    type: object
  Error:
    description: Error information
    properties:
      error:
        description: |
          Error code. In general, we try to adhere to HTTP status code
          and use these error statuses for detailed reporting.
        format: int32
        type: integer
      message:
        description: Status message with an explanation of the error
        type: string
    type: object
  GeographicData:
    description: RETS MLS Geographic Data
    properties:
      county:
        description: Listing county
        type: string
      directions:
        description: Directions to the property
        type: string
      lat:
        description: Listing latitude (if available)
        format: double
        type: number
      lng:
        description: Listing longitude (if available)
        format: double
        type: number
      marketArea:
        description: Listing GeoMarket area. May be the same as mlsArea
        type: string
    type: object
  Listing:
    description: RETS MLS Listing Property
    properties:
      address:
        $ref: '#/definitions/StreetAddress'
        description: Comprehensive property address information
      agent:
        $ref: '#/definitions/Agent'
        description: Comprehensive listing agent information
      disclaimer:
        description: |
          Data accuracy disclaimer. The value in the disclaimer may
          change depending on your MLS vendors rules.
        type: string
      geo:
        $ref: '#/definitions/GeographicData'
        description: Geographic data for the listing
      leaseTerm:
        description: Represents the length of the lease.
        type: string
      leaseType:
        description: Information about the status of the existing lease on the property.
        type: string
      listDate:
        description: Date and time the listing became Active
        format: date-time
        type: string
      listPrice:
        description: Price of the listing
        format: double
        type: number
      listingId:
        description: |
          Data Dictionary v1.3 ListingId. The well known identifier
          for the listing. The value is the id or number by the MLS as
          a public identifier for the listing.

          This identifier should not be confused with the 'mlsId', which is
          specific to the SimplyRETS API.
        type: string
      mls:
        $ref: '#/definitions/MlsInformation'
        description: MLS vendor information and data
      mlsId:
        default: 329479823
        description: |
          A unique identifier for this listing specific to the
          SimplyRETS API. Thie identifier is specific to the
          SimplyRETS api and has no correlation with the MLS
          number. Use this id when making requests to the single
          listing endpoint (eg, `/properties/{mlsId}`).

          Applications should not rely on specific 'mlsId's being
          present. Instead, apps should dynamically use the 'mlsId'
          after using other more general query parameters. Many mls
          vendors require listings which are expired, terminated or
          sold to be purged, which will render calls to specific
          mlsId's to return nothing (or possibly a 404).
        format: int64
        type: integer
      modified:
        description: Date and time of the last modification
        format: date-time
        type: string
      office:
        $ref: '#/definitions/Office'
        description: Listing office or brokerage.
      photos:
        description: |
          Photos of the property. Images are served over https and are
          suitable for production use on secure websites
        items:
          type: string
        type: array
      privateRemarks:
        description: Agent only remarks
        type: string
      property:
        $ref: '#/definitions/Property'
        description: Specific property data associated with listing.
      remarks:
        description: Description or remarks
        type: string
      sales:
        $ref: '#/definitions/Sales'
        description: Sales data
      school:
        $ref: '#/definitions/School'
        description: Comprehensive school zone data
      showingInstructions:
        description: Public instructions for showing the property.
        type: string
      tax:
        $ref: '#/definitions/Tax'
        description: Associate tax data
    type: object
  MlsInformation:
    description: RETS MLS Vendor Data
    properties:
      area:
        description: MLS Area. Generally a subdivision or community name.
        type: string
      daysOnMarket:
        description: Amount of days the property has been Active
        format: int64
        type: integer
      servingName:
        description: Alias for the listing office or brokerage
        type: string
      status:
        description: |
          MLS Status Code. Compliant with data dictionary v1.3 ListingStatus
          Listing statuses depend on your MLS's availability. Below is
          a brief description of each status with possible synonyms which
          may map to your MLS-specific statuses
          - Active: Active Listing which is still on the market
          - ActiveUnderContract: An offer has been accepted but the listing is still on market. Synonyms: Accepting Backup Offers, Backup Offer, Active With Accepted. Synonyms: Offer, Backup, Contingent
          - Pending: An offer has been accepted and the listing is no longer on market. Synonyms: Offer Accepted, Under Contract
          - Hold: The listing has been withdrawn from the market, but a contract
            still exists between the seller and the listing member. Synonyms: Hold, Hold Do Not Show, Temp Off Market
          - Withdrawn: The listing has been withdrawn from the market, but a contract
            still exists between the seller and the listing member. Synonyms: Hold, Hold Do Not Show, Temp Off Market
          - Closed: The purchase agreement has been fulfilled or the lease
            agreement has been executed. Synonyms: Sold, Leased, Rented, Closed Sale
          - Expired: The listing contract has expired
          - Delete: The listing contract was never valid or other reason for the contract to be nullified. Synonyms: Kill, Zap
          - Incomplete: The listing has not yet be completely entered and is not yet
            published in the MLS. Synonyms: Draft, Partially Complted
          - ComingSoon
        enum:
          - Active
          - ActiveUnderContract (Backup-Offer)
          - Pending
          - Hold
          - Withdrawn
          - Closed
          - Expired
          - Delete
          - Incomplete
          - ComingSoon
        type: string
    type: object
  Office:
    description: RETS MLS Office
    properties:
      brokerid:
        description: Office or brokerage MLS identifier
        type: string
      contact:
        $ref: '#/definitions/ContactInformation'
        description: |
          Associated contact details for the office. The availability of this
          information depends on your MLS rules and regulations
      name:
        description: Pimary office name
        type: string
      servingName:
        description: Primary office or brokerage name
        type: string
    type: object
  OpenHouse:
    description: SimplyRETS Open House object
    properties:
      description:
        description: The remarks and/or description details for the open house
        type: string
      endTime:
        description: The ending date time for the open house
        format: date-time
        type: string
      inputId:
        description: |
          The MLS number for the showing agent or agent which created the OpenHouse
          in the MLS database.
      listing:
        $ref: '#/definitions/Listing'
        description: The full listing associated with the OpenHouse
      openHouseId:
        description: |
          The MLS number or id provided by the MLS
        type: string
      openHouseKey:
        description: |
          A unique identifier for the open house which is specific to the
          SimplyRETS API
        type: string
      refreshments:
        description: Provided
        type: string
      startTime:
        description: Start Date for the open house
        format: date-time
        type: string
      type:
        description: 'The open house type. For example, Public or Private'
        type: string
    type: object
  Parking:
    description: RETS MLS School Data
    properties:
      description:
        description: Parking features description
        type: string
      leased:
        type: string
      spaces:
        description: Number of parking spaces
        type: integer
    type: object
  Property:
    description: Rets MLS Listing Property
    properties:
      accessibility:
        type: string
      additionalRooms:
        description: Additional room information
        type: string
      area:
        default: 5984
        description: Square footage of the building associated with a listing
        format: int64
        type: integer
      areaSource:
        default: Tax Record
        type: string
      bathsFull:
        description: Number of full bathrooms
        format: int64
        type: integer
      bathsHalf:
        description: Number of half bathrooms
        format: int64
        type: integer
      bedrooms:
        default: 5
        description: Number of bedrooms
        format: int64
        type: integer
      constructionMaterials:
        type: string
      exteriorFeatures:
        default: |
          1-2 Step Entry,Barn(s),Fenced Yard,Front Porch,Garden
          Area,Guest House,Out-Buildings,Patio,Prof Landscaping
        description: ''
        type: string
      fireplaces:
        default: 1
        description: Number of fireplaces
        format: int64
        type: integer
      foundation:
        type: string
      garageSpaces:
        description: Number of garage spaces
        format: float
        type: number
      heating:
        default: 'Central System, Forced Air, Gas'
        description: Heating description or short string
        type: string
      interiorFeatures:
        default: |
          2-Story Foyer,9 ft + Ceil Main,Cathedral Ceiling,Double Vnty
          Other,High Speed Internet Available,Entrance Foyer,Hardwood
          Floors,Trey Ceilings,Walk-In Closet(s),Wall/Wall Carpet
        description: The properties interior features
        type: string
      laundryFeatures:
        type: string
      lotDescription:
        type: string
      lotSize:
        default: 3/4 Up To 1 Acre
        description: Square footage of the entire property lot
        type: string
      maintenanceExpense:
        description: Yearly maintenance expense
        format: float
        type: number
      occupantName:
        type: string
      occupantType:
        type: string
      parking:
        $ref: '#/definitions/School'
      poolFeatures:
        type: string
      roof:
        default: Composition
        description: Property roof description
        type: string
      stories:
        default: 2
        description: |
          Number of stories or levels. Represented as a `double' to
          account for half stories.
        format: float
        type: number
      style:
        default: 'Ranch, Traditional'
        description: Property style description or short string
        type: string
      subdivision:
        default: River Oaks
        description: The subdivision or community name
        type: string
      type:
        default: RES
        description: |
          Abbreviated property type. RES is Residential, CND is CondoOrTownhome,
          RNT is Rental, MLF is Multi-Family, CRE is Commercial, LND is Land,
          FRM is Farm. See the 'propertySubType' field for more information.
        enum:
          - RES
          - CND
          - RNT
          - MLF
          - CRE
          - LND
          - FRM
        type: string
      view:
        description: View details and description
        type: string
      water:
        description: Water description and details
        type: string
      yearBuilt:
        default: 2007
        description: Year the property was built
        format: int64
        type: integer
    type: object
  Sales:
    description: Sales Data
    properties:
      agent:
        description: RETS Sales data agent id
        type: string
      closeDate:
        description: RETS Sales data close date
        format: date-time
        type: string
      closePrice:
        description: RETS Sales data sold price
        format: int64
        type: integer
      contractDate:
        description: RETS Sales data contract date
        format: date-time
        type: string
      office:
        description: RETS Sales data selling office/brokerage id
        type: string
    type: object
  School:
    description: RETS MLS School Data
    properties:
      district:
        default: School District
        description: School district name.
        type: string
      elementarySchool:
        default: Elementary School
        description: Elementary school name.
        type: string
      highSchool:
        default: High School
        description: High school name
        type: string
      middleSchool:
        default: Middle School
        description: Middle or junior school name
        type: string
    type: object
  StreetAddress:
    description: RETS MLS Street Address
    properties:
      city:
        default: Houston
        description: City name
        type: string
      country:
        default: United States
        description: Street address country (United States or Canada)
        type: string
      crossStreet:
        default: 456 Cross Rd
        description: Known cross street
        type: string
      full:
        default: 1234 SimplyRETS Drive
        description: Full pretty-printed address with suffix (if available)
        type: string
      postalCode:
        description: Street Address postal code
        type: string
      streetName:
        default: SimplyRETS Drive
        description: Name of the street
        type: string
      streetNumber:
        default: 1234
        description: Street number
        format: int64
        type: integer
    type: object
  Tax:
    description: RETS MLS Tax Data
    properties:
      annualAmount:
        description: Annual tax amount in USD
        type: string
      id:
        description: Tax Parcel ID for the listing
        type: string
      year:
        description: Tax Year
        format: int64
        type: integer
    type: object
