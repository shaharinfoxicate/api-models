{
  "swagger": "2.0",
  "schemes": [
    "https"
  ],
  "host": "reverb.com",
  "basePath": "/api",
  "info": {
    "contact": {
      "email": "integrations@reverb.com",
      "name": "Reverb API",
      "url": "https://dev.reverb.com"
    },
    "description": "reverb",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "https://reverb.com/page/terms",
    "title": "reverb",
    "version": "2.0",
    "x-logo": {
      "url": "https://apis-guru.github.io/api-models/cache/reverb.com/2.0/logo.svg"
    },
    "x-origin": {
      "format": "swagger",
      "url": "https://reverb.com/swagger/swagger.json",
      "version": "2.0"
    },
    "x-providerName": "reverb.com"
  },
  "externalDocs": {
    "url": "https://dev.reverb.com/"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "oauth2": {
      "authorizationUrl": "https://reverb.com/oauth/authorize",
      "flow": "accessCode",
      "scopes": {
        "update_listings": "",
        "write": ""
      },
      "tokenUrl": "https://reverb.com/oauth/token",
      "type": "oauth2"
    }
  },
  "paths": {
    "/accounts": {
      "post": {
        "description": "Create an account.",
        "parameters": [
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "email": {
                  "description": "Email address.",
                  "type": "string"
                },
                "first_name": {
                  "description": "First Name",
                  "type": "string"
                },
                "last_name": {
                  "description": "Last Name",
                  "type": "string"
                },
                "newsletter_opt_in": {
                  "description": "Subscribe to gear deals by email",
                  "type": "boolean"
                },
                "password": {
                  "description": "Password (at least 8 characters).",
                  "type": "string"
                }
              },
              "required": [
                "email",
                "password",
                "first_name",
                "last_name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Create an account.",
        "tags": [
          "accounts"
        ]
      }
    },
    "/articles/{slug}/related-listings": {
      "get": {
        "description": "Find listings related to an article",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Find listings related to an article",
        "tags": [
          "articles"
        ]
      }
    },
    "/auth/email": {
      "post": {
        "description": "Login by email/password",
        "parameters": [
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "email": {
                  "description": "Email address.",
                  "type": "string"
                },
                "password": {
                  "description": "Password",
                  "type": "string"
                }
              },
              "required": [
                "email",
                "password"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Login by email/password",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/facebook": {
      "post": {
        "description": "Login by facebook token",
        "parameters": [
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "fb_token": {
                  "description": "Facebook access token.",
                  "type": "string"
                }
              },
              "required": [
                "fb_token"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Login by facebook token",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/forgot_password": {
      "post": {
        "description": "Send a password reset email",
        "parameters": [
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "email": {
                  "type": "string"
                }
              },
              "required": [
                "email"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Send a password reset email",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/logout": {
      "put": {
        "description": "Logout (primarily for mobile clients)",
        "parameters": [
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "device_token": {
                  "type": "string"
                },
                "device_type": {
                  "type": "string"
                }
              },
              "required": [
                "device_type"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Logout (primarily for mobile clients)",
        "tags": [
          "auth"
        ]
      }
    },
    "/autosuggest": {
      "get": {
        "description": "Autosuggest terms for searches",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Autosuggest terms for searches",
        "tags": [
          "autosuggest"
        ]
      }
    },
    "/categories": {
      "get": {
        "description": "List of supported product categories",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "List of supported product categories",
        "tags": [
          "categories"
        ]
      }
    },
    "/categories/{product_type}": {
      "get": {
        "description": "Get category details",
        "parameters": [
          {
            "in": "path",
            "name": "product_type",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get category details",
        "tags": [
          "categories"
        ]
      }
    },
    "/categories/{product_type}/{category}": {
      "get": {
        "description": "Get subcategory details",
        "parameters": [
          {
            "in": "path",
            "name": "product_type",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "category",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get subcategory details",
        "tags": [
          "categories"
        ]
      }
    },
    "/collections": {
      "get": {
        "description": "List of curated collections",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "List of curated collections",
        "tags": [
          "collections"
        ]
      }
    },
    "/collections/{slug}": {
      "get": {
        "description": "Collection details",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Collection details",
        "tags": [
          "collections"
        ]
      }
    },
    "/comparison_shopping": {
      "get": {
        "description": "Find comparison shopping pages",
        "parameters": [
          {
            "description": "Search string to find comparison shopping pages",
            "in": "query",
            "name": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Find comparison shopping pages",
        "tags": [
          "comparison_shopping"
        ]
      }
    },
    "/comparison_shopping/{slug}": {
      "get": {
        "description": "Show comparison shopping page",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Show comparison shopping page",
        "tags": [
          "comparison_shopping"
        ]
      }
    },
    "/conversations/{id}/offer": {
      "post": {
        "description": "Make an offer to the other participant in the conversation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "message": {
                  "description": "Message to include with counter offer",
                  "type": "string"
                },
                "price": {
                  "description": "Offer price",
                  "type": "string"
                },
                "shipping_price": {
                  "description": "Shipping price (sellers only)",
                  "type": "string"
                }
              },
              "required": [
                "price"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Make an offer to the other participant in the conversation",
        "tags": [
          "conversations"
        ]
      }
    },
    "/feedback/{feedback_id}": {
      "get": {
        "description": "Feedback details",
        "parameters": [
          {
            "in": "path",
            "name": "feedback_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Feedback details",
        "tags": [
          "feedback"
        ]
      }
    },
    "/handpicked/{slug}": {
      "get": {
        "description": "Get results from a handpicked collection",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "Search query.",
            "in": "query",
            "name": "query",
            "type": "string"
          },
          {
            "description": "Maximum current auction price",
            "format": "float",
            "in": "query",
            "name": "auction_price_max",
            "type": "number"
          },
          {
            "description": "Category slug from /api/categories",
            "in": "query",
            "name": "category",
            "type": "string"
          },
          {
            "description": "Product type slug from /api/categories",
            "in": "query",
            "name": "product_type",
            "type": "string"
          },
          {
            "description": "Condition name",
            "in": "query",
            "name": "condition",
            "type": "string"
          },
          {
            "description": "Decade: e.g. 1970s, early 70s",
            "in": "query",
            "name": "decade",
            "type": "string"
          },
          {
            "description": "Visual finish of the item, common for guitars",
            "in": "query",
            "name": "finish",
            "type": "string"
          },
          {
            "description": "Handmade items only",
            "in": "query",
            "name": "handmade",
            "type": "boolean"
          },
          {
            "description": "City where item is located",
            "in": "query",
            "name": "item_city",
            "type": "string"
          },
          {
            "description": "Country code where item is located",
            "in": "query",
            "name": "item_country",
            "type": "string"
          },
          {
            "description": "State or region code where item is located",
            "in": "query",
            "name": "item_state",
            "type": "string"
          },
          {
            "description": "Make(s)/brand of item (e.g. Fender). Can take a single value or an array.",
            "in": "query",
            "name": "make",
            "type": "string"
          },
          {
            "description": "Model of item (e.g. Stratocaster)",
            "in": "query",
            "name": "model",
            "type": "string"
          },
          {
            "description": "Search term negation. If you want to exclude a term, add it here",
            "in": "query",
            "name": "must_not",
            "type": "string"
          },
          {
            "description": "Maximum price of search results (USD)",
            "format": "float",
            "in": "query",
            "name": "price_max",
            "type": "number"
          },
          {
            "description": "Minimum price of search results (USD)",
            "format": "float",
            "in": "query",
            "name": "price_min",
            "type": "number"
          },
          {
            "description": "Maximum year of manufacture",
            "in": "query",
            "name": "year_max",
            "type": "integer"
          },
          {
            "description": "Minumum year of manufacture",
            "in": "query",
            "name": "year_min",
            "type": "integer"
          },
          {
            "description": "If true, include only items that accept gift cards",
            "in": "query",
            "name": "accepts_gift_cards",
            "type": "boolean"
          },
          {
            "description": "If true, include only items by Reverb Preferred Sellers",
            "in": "query",
            "name": "preferred_seller",
            "type": "boolean"
          },
          {
            "description": "Type of listing",
            "in": "query",
            "name": "listing_type",
            "type": "string"
          },
          {
            "description": "Limit search to items that ship to this country code",
            "in": "query",
            "name": "ships_to",
            "type": "string"
          },
          {
            "description": "If true, don't return any auctions",
            "in": "query",
            "name": "exclude_auctions",
            "type": "boolean"
          },
          {
            "description": "If true, only show items that can be purchased with a payment plan",
            "in": "query",
            "name": "accepts_payment_plans",
            "type": "boolean"
          },
          {
            "description": "State of listing",
            "in": "query",
            "name": "state",
            "type": "string"
          },
          {
            "description": "Minimum number of watchers (used to find popular items)",
            "in": "query",
            "name": "watchers_count_min",
            "type": "integer"
          },
          {
            "default": 1,
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 24,
            "in": "query",
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get results from a handpicked collection",
        "tags": [
          "handpicked"
        ]
      }
    },
    "/listings": {
      "get": {
        "description": "Default search of listings includes only used & handmade. Add a filter to view all listings or use the /listings/all endpoint.",
        "parameters": [
          {
            "description": "Search query.",
            "in": "query",
            "name": "query",
            "type": "string"
          },
          {
            "description": "Maximum current auction price",
            "format": "float",
            "in": "query",
            "name": "auction_price_max",
            "type": "number"
          },
          {
            "description": "Category slug from /api/categories",
            "in": "query",
            "name": "category",
            "type": "string"
          },
          {
            "description": "Product type slug from /api/categories",
            "in": "query",
            "name": "product_type",
            "type": "string"
          },
          {
            "description": "Condition name",
            "in": "query",
            "name": "condition",
            "type": "string"
          },
          {
            "description": "Decade: e.g. 1970s, early 70s",
            "in": "query",
            "name": "decade",
            "type": "string"
          },
          {
            "description": "Visual finish of the item, common for guitars",
            "in": "query",
            "name": "finish",
            "type": "string"
          },
          {
            "description": "Handmade items only",
            "in": "query",
            "name": "handmade",
            "type": "boolean"
          },
          {
            "description": "City where item is located",
            "in": "query",
            "name": "item_city",
            "type": "string"
          },
          {
            "description": "Country code where item is located",
            "in": "query",
            "name": "item_country",
            "type": "string"
          },
          {
            "description": "State or region code where item is located",
            "in": "query",
            "name": "item_state",
            "type": "string"
          },
          {
            "description": "Make(s)/brand of item (e.g. Fender). Can take a single value or an array.",
            "in": "query",
            "name": "make",
            "type": "string"
          },
          {
            "description": "Model of item (e.g. Stratocaster)",
            "in": "query",
            "name": "model",
            "type": "string"
          },
          {
            "description": "Search term negation. If you want to exclude a term, add it here",
            "in": "query",
            "name": "must_not",
            "type": "string"
          },
          {
            "description": "Maximum price of search results (USD)",
            "format": "float",
            "in": "query",
            "name": "price_max",
            "type": "number"
          },
          {
            "description": "Minimum price of search results (USD)",
            "format": "float",
            "in": "query",
            "name": "price_min",
            "type": "number"
          },
          {
            "description": "Maximum year of manufacture",
            "in": "query",
            "name": "year_max",
            "type": "integer"
          },
          {
            "description": "Minumum year of manufacture",
            "in": "query",
            "name": "year_min",
            "type": "integer"
          },
          {
            "description": "If true, include only items that accept gift cards",
            "in": "query",
            "name": "accepts_gift_cards",
            "type": "boolean"
          },
          {
            "description": "If true, include only items by Reverb Preferred Sellers",
            "in": "query",
            "name": "preferred_seller",
            "type": "boolean"
          },
          {
            "description": "Type of listing",
            "in": "query",
            "name": "listing_type",
            "type": "string"
          },
          {
            "description": "Limit search to items that ship to this country code",
            "in": "query",
            "name": "ships_to",
            "type": "string"
          },
          {
            "description": "If true, don't return any auctions",
            "in": "query",
            "name": "exclude_auctions",
            "type": "boolean"
          },
          {
            "description": "If true, only show items that can be purchased with a payment plan",
            "in": "query",
            "name": "accepts_payment_plans",
            "type": "boolean"
          },
          {
            "description": "State of listing",
            "in": "query",
            "name": "state",
            "type": "string"
          },
          {
            "description": "Minimum number of watchers (used to find popular items)",
            "in": "query",
            "name": "watchers_count_min",
            "type": "integer"
          },
          {
            "default": 1,
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 24,
            "in": "query",
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Default search of listings includes only used & handmade. Add a filter to view all listings or use the /listings/all endpoint.",
        "tags": [
          "listings"
        ]
      },
      "post": {
        "description": "Create a listing",
        "parameters": [
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "categories": {
                  "description": "Array of up to two additional categories. Must be children of product_type.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "condition": {
                  "description": "Condition name (Brand New, Very Good, etc)",
                  "type": "string"
                },
                "description": {
                  "description": "Product description. Please keep formatting to a minimum.",
                  "type": "string"
                },
                "finish": {
                  "description": "Finish, e.g. 'Sunburst'",
                  "type": "string"
                },
                "has_inventory": {
                  "description": "Set true if selling more than one",
                  "type": "boolean"
                },
                "inventory": {
                  "description": "Number of items available for sale. Reverb will increment and decrement automatically.",
                  "type": "integer"
                },
                "location": {
                  "properties": {
                    "country_code": {
                      "description": "Ex: US",
                      "type": "string"
                    },
                    "locality": {
                      "description": "Ex: Chicago",
                      "type": "string"
                    },
                    "region": {
                      "description": "Ex: IL",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "make": {
                  "description": "ex: Fender, Gibson",
                  "type": "string"
                },
                "model": {
                  "description": "ex: Stratocaster, SG",
                  "type": "string"
                },
                "offers_enabled": {
                  "description": "Whether the listing accepts negotiated offers (default: true)",
                  "type": "boolean"
                },
                "photos": {
                  "description": "An array of image URLs. Ex: ['http://my.site.com/image.jpg']",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "price": {
                  "description": "Asking price in USD",
                  "type": "string"
                },
                "product_type": {
                  "description": "Top level category slug. Ex: electric-guitar, acoustic-guitar. Full list: /api/categories",
                  "type": "string"
                },
                "publish": {
                  "description": "Publish your listing if draft",
                  "type": "boolean"
                },
                "seller": {
                  "properties": {
                    "paypal_email": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "shipping": {
                  "properties": {
                    "local": {
                      "description": "True if you offer local pickup",
                      "type": "boolean"
                    },
                    "rates": {
                      "description": "List of shipping rates. Set to null to clear rates.",
                      "items": {
                        "properties": {
                          "rate": {
                            "description": "Shipping rate in USD",
                            "type": "string"
                          },
                          "region_code": {
                            "description": "Country code or subregion/superregion code. Full list of codes at /api/shipping/regions",
                            "type": "string"
                          },
                          "region_type": {
                            "description": "[everywhere_else,country,subregion,superregion]",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "shipping_profile_id": {
                  "description": "id of a shop's shipping profile",
                  "type": "string"
                },
                "shipping_profile_name": {
                  "description": "Name of a shipping profile",
                  "type": "string"
                },
                "sku": {
                  "description": "Unique identifier for product",
                  "type": "string"
                },
                "sold_as_is": {
                  "description": "This item is sold As-Is and cannot be returned",
                  "type": "boolean"
                },
                "title": {
                  "description": "Title of your listing",
                  "type": "string"
                },
                "year": {
                  "description": "Supports many formats. Ex: 1979, mid-70s, late 90s",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "security": [
          {
            "oauth2": [
              "update_listings"
            ]
          }
        ],
        "summary": "Create a listing",
        "tags": [
          "listings"
        ]
      }
    },
    "/listings/all": {
      "get": {
        "description": "All listings including used, handmade, and brand new",
        "parameters": [
          {
            "description": "Search query.",
            "in": "query",
            "name": "query",
            "type": "string"
          },
          {
            "description": "Maximum current auction price",
            "format": "float",
            "in": "query",
            "name": "auction_price_max",
            "type": "number"
          },
          {
            "description": "Category slug from /api/categories",
            "in": "query",
            "name": "category",
            "type": "string"
          },
          {
            "description": "Product type slug from /api/categories",
            "in": "query",
            "name": "product_type",
            "type": "string"
          },
          {
            "description": "Condition name",
            "in": "query",
            "name": "condition",
            "type": "string"
          },
          {
            "description": "Decade: e.g. 1970s, early 70s",
            "in": "query",
            "name": "decade",
            "type": "string"
          },
          {
            "description": "Visual finish of the item, common for guitars",
            "in": "query",
            "name": "finish",
            "type": "string"
          },
          {
            "description": "Handmade items only",
            "in": "query",
            "name": "handmade",
            "type": "boolean"
          },
          {
            "description": "City where item is located",
            "in": "query",
            "name": "item_city",
            "type": "string"
          },
          {
            "description": "Country code where item is located",
            "in": "query",
            "name": "item_country",
            "type": "string"
          },
          {
            "description": "State or region code where item is located",
            "in": "query",
            "name": "item_state",
            "type": "string"
          },
          {
            "description": "Make(s)/brand of item (e.g. Fender). Can take a single value or an array.",
            "in": "query",
            "name": "make",
            "type": "string"
          },
          {
            "description": "Model of item (e.g. Stratocaster)",
            "in": "query",
            "name": "model",
            "type": "string"
          },
          {
            "description": "Search term negation. If you want to exclude a term, add it here",
            "in": "query",
            "name": "must_not",
            "type": "string"
          },
          {
            "description": "Maximum price of search results (USD)",
            "format": "float",
            "in": "query",
            "name": "price_max",
            "type": "number"
          },
          {
            "description": "Minimum price of search results (USD)",
            "format": "float",
            "in": "query",
            "name": "price_min",
            "type": "number"
          },
          {
            "description": "Maximum year of manufacture",
            "in": "query",
            "name": "year_max",
            "type": "integer"
          },
          {
            "description": "Minumum year of manufacture",
            "in": "query",
            "name": "year_min",
            "type": "integer"
          },
          {
            "description": "If true, include only items that accept gift cards",
            "in": "query",
            "name": "accepts_gift_cards",
            "type": "boolean"
          },
          {
            "description": "If true, include only items by Reverb Preferred Sellers",
            "in": "query",
            "name": "preferred_seller",
            "type": "boolean"
          },
          {
            "description": "Type of listing",
            "in": "query",
            "name": "listing_type",
            "type": "string"
          },
          {
            "description": "Limit search to items that ship to this country code",
            "in": "query",
            "name": "ships_to",
            "type": "string"
          },
          {
            "description": "If true, don't return any auctions",
            "in": "query",
            "name": "exclude_auctions",
            "type": "boolean"
          },
          {
            "description": "If true, only show items that can be purchased with a payment plan",
            "in": "query",
            "name": "accepts_payment_plans",
            "type": "boolean"
          },
          {
            "description": "State of listing",
            "in": "query",
            "name": "state",
            "type": "string"
          },
          {
            "description": "Minimum number of watchers (used to find popular items)",
            "in": "query",
            "name": "watchers_count_min",
            "type": "integer"
          },
          {
            "default": 1,
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 24,
            "in": "query",
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "All listings including used, handmade, and brand new",
        "tags": [
          "listings"
        ]
      }
    },
    "/listings/{id}/offer": {
      "post": {
        "description": "Make an offer to the seller of a listing",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "message": {
                  "description": "Message to include with counter offer",
                  "type": "string"
                },
                "price": {
                  "description": "Offer price",
                  "type": "string"
                },
                "shipping_price": {
                  "description": "Shipping price (sellers only)",
                  "type": "string"
                }
              },
              "required": [
                "price"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Make an offer to the seller of a listing",
        "tags": [
          "listings"
        ]
      }
    },
    "/listings/{listing_id}/conversations": {
      "post": {
        "description": "Start a conversation with a seller",
        "parameters": [
          {
            "in": "path",
            "name": "listing_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "body": {
                  "type": "string"
                }
              },
              "required": [
                "body"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Start a conversation with a seller",
        "tags": [
          "listings"
        ]
      }
    },
    "/listings/{slug}": {
      "delete": {
        "description": "Delete a draft listing. Cannot be used on non-drafts.",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Delete a draft listing. Cannot be used on non-drafts.",
        "tags": [
          "listings"
        ]
      },
      "get": {
        "description": "Listing details",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Listing details",
        "tags": [
          "listings"
        ]
      },
      "put": {
        "description": "Update a listing",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "categories": {
                  "description": "Array of up to two additional categories. Must be children of product_type.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "condition": {
                  "description": "Condition name (Brand New, Very Good, etc)",
                  "type": "string"
                },
                "description": {
                  "description": "Product description. Please keep formatting to a minimum.",
                  "type": "string"
                },
                "finish": {
                  "description": "Finish, e.g. 'Sunburst'",
                  "type": "string"
                },
                "has_inventory": {
                  "description": "Set true if selling more than one",
                  "type": "boolean"
                },
                "inventory": {
                  "description": "Number of items available for sale. Reverb will increment and decrement automatically.",
                  "type": "integer"
                },
                "location": {
                  "properties": {
                    "country_code": {
                      "description": "Ex: US",
                      "type": "string"
                    },
                    "locality": {
                      "description": "Ex: Chicago",
                      "type": "string"
                    },
                    "region": {
                      "description": "Ex: IL",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "make": {
                  "description": "ex: Fender, Gibson",
                  "type": "string"
                },
                "model": {
                  "description": "ex: Stratocaster, SG",
                  "type": "string"
                },
                "offers_enabled": {
                  "description": "Whether the listing accepts negotiated offers (default: true)",
                  "type": "boolean"
                },
                "photos": {
                  "description": "An array of image URLs. Ex: ['http://my.site.com/image.jpg']",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "price": {
                  "description": "Asking price in USD",
                  "type": "string"
                },
                "product_type": {
                  "description": "Top level category slug. Ex: electric-guitar, acoustic-guitar. Full list: /api/categories",
                  "type": "string"
                },
                "publish": {
                  "description": "Publish your listing if draft",
                  "type": "boolean"
                },
                "seller": {
                  "properties": {
                    "paypal_email": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "shipping": {
                  "properties": {
                    "local": {
                      "description": "True if you offer local pickup",
                      "type": "boolean"
                    },
                    "rates": {
                      "description": "List of shipping rates. Set to null to clear rates.",
                      "items": {
                        "properties": {
                          "rate": {
                            "description": "Shipping rate in USD",
                            "type": "string"
                          },
                          "region_code": {
                            "description": "Country code or subregion/superregion code. Full list of codes at /api/shipping/regions",
                            "type": "string"
                          },
                          "region_type": {
                            "description": "[everywhere_else,country,subregion,superregion]",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "shipping_profile_id": {
                  "description": "id of a shop's shipping profile",
                  "type": "string"
                },
                "shipping_profile_name": {
                  "description": "Name of a shipping profile",
                  "type": "string"
                },
                "sku": {
                  "description": "Unique identifier for product",
                  "type": "string"
                },
                "sold_as_is": {
                  "description": "This item is sold As-Is and cannot be returned",
                  "type": "boolean"
                },
                "title": {
                  "description": "Title of your listing",
                  "type": "string"
                },
                "year": {
                  "description": "Supports many formats. Ex: 1979, mid-70s, late 90s",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "security": [
          {
            "oauth2": [
              "update_listings"
            ]
          }
        ],
        "summary": "Update a listing",
        "tags": [
          "listings"
        ]
      }
    },
    "/listings/{slug}/edit": {
      "get": {
        "description": "Edit listing.",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Edit listing.",
        "tags": [
          "listings"
        ]
      }
    },
    "/listings/{slug}/flag": {
      "post": {
        "description": "Flag a listing for inappropriate content or fraud",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "reason": {
                  "description": "Valid reasons: 'Sexuality/nudity', 'Hateful or inappropriate speech', 'Item not as described or potential fraud', 'Trademark infringement', 'Other'",
                  "type": "string"
                }
              },
              "required": [
                "reason"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Flag a listing for inappropriate content or fraud",
        "tags": [
          "listings"
        ]
      }
    },
    "/my/account": {
      "get": {
        "description": "Get account details",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get account details",
        "tags": [
          "my"
        ]
      }
    },
    "/my/conversations": {
      "get": {
        "description": "Get a list of your conversations",
        "parameters": [
          {
            "description": "Query string to search conversations by",
            "in": "query",
            "name": "search",
            "type": "string"
          },
          {
            "description": "Show unread conversations only",
            "in": "query",
            "name": "unread_only",
            "type": "boolean"
          },
          {
            "default": 1,
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 24,
            "in": "query",
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get a list of your conversations",
        "tags": [
          "my"
        ]
      },
      "post": {
        "description": "Start a conversation",
        "parameters": [
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "body": {
                  "description": "The body of the message",
                  "type": "string"
                },
                "cloudinary_photos": {
                  "description": "An array of cloudinary data hashes (Reverb internal use only).",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "listing_id": {
                  "description": "The id of the listing being discussed",
                  "type": "integer"
                },
                "recipient_id": {
                  "description": "The id of the user you are trying to contact",
                  "type": "integer"
                }
              },
              "required": [
                "body"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Start a conversation",
        "tags": [
          "my"
        ]
      }
    },
    "/my/conversations/{conversation_id}/messages": {
      "post": {
        "description": "Send a message",
        "parameters": [
          {
            "in": "path",
            "name": "conversation_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "body": {
                  "type": "string"
                }
              },
              "required": [
                "body"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Send a message",
        "tags": [
          "my"
        ]
      }
    },
    "/my/conversations/{id}": {
      "get": {
        "description": "Display conversation details with messages in natural time order (oldest to newest)",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Display conversation details with messages in natural time order (oldest to newest)",
        "tags": [
          "my"
        ]
      },
      "put": {
        "description": "Mark a conversation read/unread",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "read": {
                  "description": "Should the conversation be marked as read",
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Mark a conversation read/unread",
        "tags": [
          "my"
        ]
      }
    },
    "/my/counts": {
      "get": {
        "description": "Get your actionable status counts",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get your actionable status counts",
        "tags": [
          "my"
        ]
      }
    },
    "/my/feed": {
      "get": {
        "description": "Get listings from your feed",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get listings from your feed",
        "tags": [
          "my"
        ]
      }
    },
    "/my/feedback/received": {
      "get": {
        "description": "List of received feedback",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "List of received feedback",
        "tags": [
          "my"
        ]
      }
    },
    "/my/feedback/sent": {
      "get": {
        "description": "List of sent feedback",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "List of sent feedback",
        "tags": [
          "my"
        ]
      }
    },
    "/my/follows": {
      "get": {
        "description": "See what the user is following",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "See what the user is following",
        "tags": [
          "my"
        ]
      }
    },
    "/my/follows/brands/{slug}": {
      "delete": {
        "description": "Unfollow a brand",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Unfollow a brand",
        "tags": [
          "my"
        ]
      },
      "get": {
        "description": "Follow status for a brand",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Follow status for a brand",
        "tags": [
          "my"
        ]
      },
      "post": {
        "description": "Follow a brand",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Follow a brand",
        "tags": [
          "my"
        ]
      }
    },
    "/my/follows/categories/{category}/{subcategory}": {
      "delete": {
        "description": "Unfollow a subcategory",
        "parameters": [
          {
            "in": "path",
            "name": "category",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "subcategory",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Unfollow a subcategory",
        "tags": [
          "my"
        ]
      },
      "get": {
        "description": "Follow status for a subcategory",
        "parameters": [
          {
            "in": "path",
            "name": "category",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "subcategory",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Follow status for a subcategory",
        "tags": [
          "my"
        ]
      },
      "post": {
        "description": "Follow a subcategory",
        "parameters": [
          {
            "in": "path",
            "name": "category",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "subcategory",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Follow a subcategory",
        "tags": [
          "my"
        ]
      }
    },
    "/my/follows/categories/{slug}": {
      "delete": {
        "description": "Unfollow a category",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Unfollow a category",
        "tags": [
          "my"
        ]
      },
      "get": {
        "description": "Follow status for a category",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Follow status for a category",
        "tags": [
          "my"
        ]
      },
      "post": {
        "description": "Follow a category",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Follow a category",
        "tags": [
          "my"
        ]
      }
    },
    "/my/follows/collections/{slug}": {
      "delete": {
        "description": "Unfollow a collection",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Unfollow a collection",
        "tags": [
          "my"
        ]
      },
      "get": {
        "description": "Follow status for a collection",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Follow status for a collection",
        "tags": [
          "my"
        ]
      },
      "post": {
        "description": "Follow a collection",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Follow a collection",
        "tags": [
          "my"
        ]
      }
    },
    "/my/follows/handpicked/{slug}": {
      "delete": {
        "description": "Unfollow a handpicked collection",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Unfollow a handpicked collection",
        "tags": [
          "my"
        ]
      },
      "get": {
        "description": "Follow status for a handpicked collection",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Follow status for a handpicked collection",
        "tags": [
          "my"
        ]
      },
      "post": {
        "description": "Follow a handpicked collection",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Follow a handpicked collection",
        "tags": [
          "my"
        ]
      }
    },
    "/my/follows/search": {
      "get": {
        "description": "Follow status for a search",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Follow status for a search",
        "tags": [
          "my"
        ]
      },
      "post": {
        "description": "Follow a search",
        "parameters": [
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "accepts_gift_cards": {
                  "description": "If true, include only items that accept gift cards",
                  "type": "boolean"
                },
                "accepts_payment_plans": {
                  "description": "If true, only show items that can be purchased with a payment plan",
                  "type": "boolean"
                },
                "auction_price_max": {
                  "description": "Maximum current auction price",
                  "format": "float",
                  "type": "number"
                },
                "category": {
                  "description": "Category slug from /api/categories",
                  "type": "string"
                },
                "condition": {
                  "description": "Condition name",
                  "type": "string"
                },
                "decade": {
                  "description": "Decade: e.g. 1970s, early 70s",
                  "type": "string"
                },
                "exclude_auctions": {
                  "description": "If true, don't return any auctions",
                  "type": "boolean"
                },
                "finish": {
                  "description": "Visual finish of the item, common for guitars",
                  "type": "string"
                },
                "handmade": {
                  "description": "Handmade items only",
                  "type": "boolean"
                },
                "item_city": {
                  "description": "City where item is located",
                  "type": "string"
                },
                "item_country": {
                  "description": "Country code where item is located",
                  "type": "string"
                },
                "item_state": {
                  "description": "State or region code where item is located",
                  "type": "string"
                },
                "listing_type": {
                  "description": "Type of listing",
                  "type": "string"
                },
                "make": {
                  "description": "Make(s)/brand of item (e.g. Fender). Can take a single value or an array.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "model": {
                  "description": "Model of item (e.g. Stratocaster)",
                  "type": "string"
                },
                "must_not": {
                  "description": "Search term negation. If you want to exclude a term, add it here",
                  "type": "string"
                },
                "preferred_seller": {
                  "description": "If true, include only items by Reverb Preferred Sellers",
                  "type": "boolean"
                },
                "price_max": {
                  "description": "Maximum price of search results (USD)",
                  "format": "float",
                  "type": "number"
                },
                "price_min": {
                  "description": "Minimum price of search results (USD)",
                  "format": "float",
                  "type": "number"
                },
                "product_type": {
                  "description": "Product type slug from /api/categories",
                  "type": "string"
                },
                "query": {
                  "description": "Search query.",
                  "type": "string"
                },
                "ships_to": {
                  "description": "Limit search to items that ship to this country code",
                  "type": "string"
                },
                "state": {
                  "description": "State of listing",
                  "type": "string"
                },
                "watchers_count_min": {
                  "description": "Minimum number of watchers (used to find popular items)",
                  "type": "integer"
                },
                "year_max": {
                  "description": "Maximum year of manufacture",
                  "type": "integer"
                },
                "year_min": {
                  "description": "Minumum year of manufacture",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Follow a search",
        "tags": [
          "my"
        ]
      }
    },
    "/my/follows/shops/{slug}": {
      "delete": {
        "description": "Unfollow a shop",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Unfollow a shop",
        "tags": [
          "my"
        ]
      },
      "get": {
        "description": "Follow status for a shop",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Follow status for a shop",
        "tags": [
          "my"
        ]
      },
      "post": {
        "description": "Follow a shop",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Follow a shop",
        "tags": [
          "my"
        ]
      }
    },
    "/my/follows/{follow_id}": {
      "delete": {
        "description": "Delete a follow",
        "parameters": [
          {
            "in": "path",
            "name": "follow_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Delete a follow",
        "tags": [
          "my"
        ]
      }
    },
    "/my/listings": {
      "get": {
        "description": "Retrieve a list of live listings for the seller. To search all listings specify state=all",
        "parameters": [
          {
            "description": "Available: [\"all\", \"draft\", \"ended\", \"live\", \"ordered\", \"sold_out\", \"suspended\", \"seller_unavailable\"]. Defaults to 'live'",
            "in": "query",
            "name": "state",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Retrieve a list of live listings for the seller. To search all listings specify state=all",
        "tags": [
          "my"
        ]
      }
    },
    "/my/listings/drafts": {
      "get": {
        "description": "Retrieve a list your draft listings",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Retrieve a list your draft listings",
        "tags": [
          "my"
        ]
      }
    },
    "/my/listings/negotiations": {
      "get": {
        "description": "Get a list of active negotiations as a seller",
        "parameters": [
          {
            "default": 1,
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 24,
            "in": "query",
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get a list of active negotiations as a seller",
        "tags": [
          "my"
        ]
      }
    },
    "/my/listings/{slug}/state/end": {
      "put": {
        "description": "End a listing",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          },
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "reason": {
                  "description": "The reason this listing is being ended. Valid reasons: [\"not_sold\", \"reverb_sale\"].",
                  "type": "string"
                }
              },
              "required": [
                "reason"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "End a listing",
        "tags": [
          "my"
        ]
      }
    },
    "/my/lists": {
      "get": {
        "description": "Get a list of your lists (wishlist, watch list, etc)",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get a list of your lists (wishlist, watch list, etc)",
        "tags": [
          "my"
        ]
      }
    },
    "/my/negotiations/buying": {
      "get": {
        "description": "Get a list of active negotiations as a buyer",
        "parameters": [
          {
            "default": 1,
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 24,
            "in": "query",
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get a list of active negotiations as a buyer",
        "tags": [
          "my"
        ]
      }
    },
    "/my/negotiations/{id}": {
      "get": {
        "description": "Get offer details",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get offer details",
        "tags": [
          "my"
        ]
      }
    },
    "/my/negotiations/{id}/accept": {
      "post": {
        "description": "Accept an offer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "message": {
                  "description": "Message to include with accepted offer",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Accept an offer",
        "tags": [
          "my"
        ]
      }
    },
    "/my/negotiations/{id}/counter": {
      "post": {
        "description": "Counter an offer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "message": {
                  "description": "Message to include with counter offer",
                  "type": "string"
                },
                "price": {
                  "description": "Offer price",
                  "type": "string"
                },
                "shipping_price": {
                  "description": "Shipping price (sellers only)",
                  "type": "string"
                }
              },
              "required": [
                "price"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Counter an offer",
        "tags": [
          "my"
        ]
      }
    },
    "/my/negotiations/{id}/decline": {
      "post": {
        "description": "Decline an offer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "message": {
                  "description": "Message to include with declined offer",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Decline an offer",
        "tags": [
          "my"
        ]
      }
    },
    "/my/orders/awaiting_feedback": {
      "get": {
        "description": "List of orders that need feedback",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "List of orders that need feedback",
        "tags": [
          "my"
        ]
      }
    },
    "/my/orders/buying/all": {
      "get": {
        "description": "Returns all orders, newest first.",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Returns all orders, newest first.",
        "tags": [
          "my"
        ]
      }
    },
    "/my/orders/buying/unpaid": {
      "get": {
        "description": "Returns unpaid orders, newest first.",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Returns unpaid orders, newest first.",
        "tags": [
          "my"
        ]
      }
    },
    "/my/orders/buying/{id}": {
      "get": {
        "description": "Returns order details for a buyer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Returns order details for a buyer",
        "tags": [
          "my"
        ]
      }
    },
    "/my/orders/buying/{id}/mark_received": {
      "post": {
        "description": "Marks an order as received by the buyer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Marks an order as received by the buyer",
        "tags": [
          "my"
        ]
      }
    },
    "/my/orders/selling/all": {
      "get": {
        "description": "Get all seller orders, newest first.",
        "parameters": [
          {
            "description": "Filter by date created in ISO8601 format - e.g: 2015-04-09T10:52:23-00:00",
            "in": "query",
            "name": "created_start_date",
            "type": "string"
          },
          {
            "description": "Filter by date created in ISO8601 format - e.g: 2015-04-09T10:52:23-00:00",
            "in": "query",
            "name": "created_end_date",
            "type": "string"
          },
          {
            "description": "Filter by date modified in ISO8601 format - e.g: 2015-04-09T10:52:23-00:00",
            "in": "query",
            "name": "updated_start_date",
            "type": "string"
          },
          {
            "description": "Filter by date modified in ISO8601 format - e.g: 2015-04-09T10:52:23-00:00",
            "in": "query",
            "name": "updated_end_date",
            "type": "string"
          },
          {
            "default": 1,
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 24,
            "in": "query",
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get all seller orders, newest first.",
        "tags": [
          "my"
        ]
      }
    },
    "/my/orders/selling/awaiting_shipment": {
      "get": {
        "description": "Get seller orders awaiting shipment, newest first.",
        "parameters": [
          {
            "description": "Filter by date created in ISO8601 format - e.g: 2015-04-09T10:52:23-00:00",
            "in": "query",
            "name": "created_start_date",
            "type": "string"
          },
          {
            "description": "Filter by date created in ISO8601 format - e.g: 2015-04-09T10:52:23-00:00",
            "in": "query",
            "name": "created_end_date",
            "type": "string"
          },
          {
            "description": "Filter by date modified in ISO8601 format - e.g: 2015-04-09T10:52:23-00:00",
            "in": "query",
            "name": "updated_start_date",
            "type": "string"
          },
          {
            "description": "Filter by date modified in ISO8601 format - e.g: 2015-04-09T10:52:23-00:00",
            "in": "query",
            "name": "updated_end_date",
            "type": "string"
          },
          {
            "default": 1,
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 24,
            "in": "query",
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get seller orders awaiting shipment, newest first.",
        "tags": [
          "my"
        ]
      }
    },
    "/my/orders/selling/unpaid": {
      "get": {
        "description": "Get unpaid seller orders, newest first.",
        "parameters": [
          {
            "description": "Filter by date created in ISO8601 format - e.g: 2015-04-09T10:52:23-00:00",
            "in": "query",
            "name": "created_start_date",
            "type": "string"
          },
          {
            "description": "Filter by date created in ISO8601 format - e.g: 2015-04-09T10:52:23-00:00",
            "in": "query",
            "name": "created_end_date",
            "type": "string"
          },
          {
            "description": "Filter by date modified in ISO8601 format - e.g: 2015-04-09T10:52:23-00:00",
            "in": "query",
            "name": "updated_start_date",
            "type": "string"
          },
          {
            "description": "Filter by date modified in ISO8601 format - e.g: 2015-04-09T10:52:23-00:00",
            "in": "query",
            "name": "updated_end_date",
            "type": "string"
          },
          {
            "default": 1,
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 24,
            "in": "query",
            "name": "per_page",
            "type": "integer"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get unpaid seller orders, newest first.",
        "tags": [
          "my"
        ]
      }
    },
    "/my/orders/selling/{id}": {
      "get": {
        "description": "Returns order details for a seller",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Returns order details for a seller",
        "tags": [
          "my"
        ]
      }
    },
    "/my/orders/selling/{id}/mark_picked_up": {
      "post": {
        "description": "Marks an order as picked up",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "date": {
                  "description": "Date the item was picked up.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Marks an order as picked up",
        "tags": [
          "my"
        ]
      }
    },
    "/my/orders/selling/{id}/ship": {
      "post": {
        "description": "Marks an order as shipped",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "date": {
                  "description": "Date the item was shipped",
                  "type": "string"
                },
                "provider": {
                  "description": "Shipping provider: One of UPS, USPS, FedEx, DHL, Canada Post, Other",
                  "type": "string"
                },
                "send_notification": {
                  "description": "Should we send an email notification to the buyer",
                  "type": "boolean"
                },
                "tracking_number": {
                  "description": "Tracking number provided by the shipping provider",
                  "type": "string"
                }
              },
              "required": [
                "provider",
                "tracking_number",
                "send_notification"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Marks an order as shipped",
        "tags": [
          "my"
        ]
      }
    },
    "/my/payments/selling": {
      "get": {
        "description": "Get payments",
        "parameters": [
          {
            "default": 1,
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "default": 24,
            "in": "query",
            "name": "per_page",
            "type": "integer"
          },
          {
            "description": "Filter by date created in ISO8601 format - e.g: 2015-04-09T10:52:23-00:00",
            "in": "query",
            "name": "created_start_date",
            "type": "string"
          },
          {
            "description": "Filter by date created in ISO8601 format - e.g: 2015-04-09T10:52:23-00:00",
            "in": "query",
            "name": "created_end_date",
            "type": "string"
          },
          {
            "description": "Filter by date modified in ISO8601 format - e.g: 2015-04-09T10:52:23-00:00",
            "in": "query",
            "name": "updated_start_date",
            "type": "string"
          },
          {
            "description": "Filter by date modified in ISO8601 format - e.g: 2015-04-09T10:52:23-00:00",
            "in": "query",
            "name": "updated_end_date",
            "type": "string"
          },
          {
            "description": "Look up payments by order id",
            "in": "query",
            "name": "order_id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get payments",
        "tags": [
          "my"
        ]
      }
    },
    "/my/payments/selling/{id}": {
      "get": {
        "description": "Get payment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get payment",
        "tags": [
          "my"
        ]
      }
    },
    "/my/viewed_listings": {
      "get": {
        "description": "Get a list of your recently viewed listings.",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get a list of your recently viewed listings.",
        "tags": [
          "my"
        ]
      }
    },
    "/my/wishlist": {
      "get": {
        "description": "Get a list of wishlisted items",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get a list of wishlisted items",
        "tags": [
          "my"
        ]
      }
    },
    "/my/wishlist/{id}": {
      "delete": {
        "description": "Remove a listing from your wishlist",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Remove a listing from your wishlist",
        "tags": [
          "my"
        ]
      },
      "put": {
        "description": "Add a listing to your wishlist",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Add a listing to your wishlist",
        "tags": [
          "my"
        ]
      }
    },
    "/orders/{order_id}/feedback/buyer": {
      "get": {
        "description": "Feedback details for an order's buyer",
        "parameters": [
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Feedback details for an order's buyer",
        "tags": [
          "orders"
        ]
      },
      "post": {
        "description": "Add feedback about an order's buyer",
        "parameters": [
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "rating": {
                  "description": "Number 1-5; Higher is better",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Add feedback about an order's buyer",
        "tags": [
          "orders"
        ]
      }
    },
    "/orders/{order_id}/feedback/seller": {
      "get": {
        "description": "Feedback details for an order's seller",
        "parameters": [
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Feedback details for an order's seller",
        "tags": [
          "orders"
        ]
      },
      "post": {
        "description": "Add feedback about an order's seller",
        "parameters": [
          {
            "in": "path",
            "name": "order_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "rating": {
                  "description": "Number 1-5; Higher is better",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Add feedback about an order's seller",
        "tags": [
          "orders"
        ]
      }
    },
    "/priceguide": {
      "get": {
        "description": "Search the Price Guide",
        "parameters": [
          {
            "description": "Search query.",
            "in": "query",
            "name": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Search the Price Guide",
        "tags": [
          "priceguide"
        ]
      }
    },
    "/priceguide/{id}": {
      "get": {
        "description": "Retrieve a Price Guide",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Retrieve a Price Guide",
        "tags": [
          "priceguide"
        ]
      }
    },
    "/priceguide/{id}/transactions": {
      "get": {
        "description": "Get a list of paginated transactions for a price guide.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get a list of paginated transactions for a price guide.",
        "tags": [
          "priceguide"
        ]
      }
    },
    "/priceguide/{id}/transactions/summary": {
      "get": {
        "description": "Get a summary of transactions for a given price guide",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "default": 3,
            "in": "query",
            "name": "number_of_months",
            "type": "integer"
          },
          {
            "default": "used",
            "in": "query",
            "name": "condition",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get a summary of transactions for a given price guide",
        "tags": [
          "priceguide"
        ]
      }
    },
    "/shipping/providers": {
      "get": {
        "description": "List of supported shipping providers",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "List of supported shipping providers",
        "tags": [
          "shipping"
        ]
      }
    },
    "/shipping/regions": {
      "get": {
        "description": "Get a list of shipping regions",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get a list of shipping regions",
        "tags": [
          "shipping"
        ]
      }
    },
    "/shop": {
      "get": {
        "description": "Get your own shop details",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get your own shop details",
        "tags": [
          "shop"
        ]
      },
      "put": {
        "description": "Update your shop profile",
        "parameters": [
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "address": {
                  "properties": {
                    "extended_address": {
                      "type": "string"
                    },
                    "locality": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "postal_code": {
                      "type": "string"
                    },
                    "region": {
                      "type": "string"
                    },
                    "street_address": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "description": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "payment_policy": {
                  "type": "string"
                },
                "return_policy": {
                  "type": "string"
                },
                "shipping_policy": {
                  "type": "string"
                },
                "website": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Update your shop profile",
        "tags": [
          "shop"
        ]
      }
    },
    "/shop/payment_methods": {
      "get": {
        "description": "Get accepted payment methods",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get accepted payment methods",
        "tags": [
          "shop"
        ]
      }
    },
    "/shop/payment_methods/direct_checkout": {
      "delete": {
        "description": "Disable direct checkout as an accepted payment method",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Disable direct checkout as an accepted payment method",
        "tags": [
          "shop"
        ]
      },
      "get": {
        "description": "Get direct checkout settings",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get direct checkout settings",
        "tags": [
          "shop"
        ]
      },
      "post": {
        "description": "Add direct checkout account",
        "parameters": [
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "bank_account_number": {
                  "type": "string"
                },
                "bank_account_type": {
                  "type": "string"
                },
                "name_on_account": {
                  "type": "string"
                },
                "routing_number": {
                  "type": "string"
                }
              },
              "required": [
                "name_on_account",
                "bank_account_number",
                "routing_number",
                "bank_account_type"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Add direct checkout account",
        "tags": [
          "shop"
        ]
      }
    },
    "/shop/payment_methods/paypal": {
      "delete": {
        "description": "Disable paypal as an accepted payment method",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Disable paypal as an accepted payment method",
        "tags": [
          "shop"
        ]
      },
      "get": {
        "description": "Get your paypal profile",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get your paypal profile",
        "tags": [
          "shop"
        ]
      },
      "post": {
        "description": "Add paypal account",
        "parameters": [
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "email": {
                  "type": "string"
                },
                "first_name": {
                  "type": "string"
                },
                "last_name": {
                  "type": "string"
                }
              },
              "required": [
                "email",
                "first_name",
                "last_name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Add paypal account",
        "tags": [
          "shop"
        ]
      }
    },
    "/shop/vacation": {
      "delete": {
        "description": "Disable vacation mode. All listings will be re-enabled.",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Disable vacation mode. All listings will be re-enabled.",
        "tags": [
          "shop"
        ]
      },
      "get": {
        "description": "Returns shop vacation status",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Returns shop vacation status",
        "tags": [
          "shop"
        ]
      },
      "post": {
        "description": "Enable vacation mode. All listings will be unavailable until vacation mode is turned off.",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Enable vacation mode. All listings will be unavailable until vacation mode is turned off.",
        "tags": [
          "shop"
        ]
      }
    },
    "/shops/{slug}": {
      "get": {
        "description": "Get details on a shop.",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get details on a shop.",
        "tags": [
          "shops"
        ]
      }
    },
    "/shops/{slug}/feedback": {
      "get": {
        "description": "Get seller's feedback",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get seller's feedback",
        "tags": [
          "shops"
        ]
      }
    },
    "/shops/{slug}/feedback/buyer": {
      "get": {
        "description": "Get seller's feedback as a buyer",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get seller's feedback as a buyer",
        "tags": [
          "shops"
        ]
      }
    },
    "/shops/{slug}/feedback/seller": {
      "get": {
        "description": "Get seller's feedback as a seller",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get seller's feedback as a seller",
        "tags": [
          "shops"
        ]
      }
    },
    "/wants": {
      "get": {
        "description": "A list of wanted items by the user",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "A list of wanted items by the user",
        "tags": [
          "wants"
        ]
      }
    },
    "/wants/{id}": {
      "delete": {
        "description": "Unmark an item wanted. Returns 204.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Unmark an item wanted. Returns 204.",
        "tags": [
          "wants"
        ]
      },
      "put": {
        "description": "Mark an item wanted. Returns 204 on success or 412 on failure.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Mark an item wanted. Returns 204 on success or 412 on failure.",
        "tags": [
          "wants"
        ]
      }
    },
    "/webhooks/registrations": {
      "get": {
        "description": "Get webhook registrations",
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get webhook registrations",
        "tags": [
          "webhooks"
        ]
      },
      "post": {
        "description": "Register a webhook",
        "parameters": [
          {
            "description": "the content of the request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "topic": {
                  "description": "Valid values: listings/update, orders/create",
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "required": [
                "url",
                "topic"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Register a webhook",
        "tags": [
          "webhooks"
        ]
      }
    },
    "/webhooks/registrations/{id}": {
      "delete": {
        "description": "Remove a webhook",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Remove a webhook",
        "tags": [
          "webhooks"
        ]
      },
      "get": {
        "description": "Get details of a webhook registration",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Unexpected error"
          }
        },
        "summary": "Get details of a webhook registration",
        "tags": [
          "webhooks"
        ]
      }
    }
  },
  "definitions": {}
}
